ETH_ALEN = 6
ETH_HLEN = 14
ETH_ZLEN = 60
ETH_DATA_LEN = 1500
ETH_FRAME_LEN = 1514
ETH_FCS_LEN = 4
ETH_P_LOOP = 0x0060
ETH_P_PUP = 0x0200
ETH_P_PUPAT = 0x0201
ETH_P_TSN = 0x22F0
ETH_P_IP = 0x0800
ETH_P_X25 = 0x0805
ETH_P_ARP = 0x0806
ETH_P_BPQ = 0x08FF
ETH_P_IEEEPUP = 0x0a00
ETH_P_IEEEPUPAT = 0x0a01
ETH_P_BATMAN = 0x4305
ETH_P_DEC = 0x6000
ETH_P_DNA_DL = 0x6001
ETH_P_DNA_RC = 0x6002
ETH_P_DNA_RT = 0x6003
ETH_P_LAT = 0x6004
ETH_P_DIAG = 0x6005
ETH_P_CUST = 0x6006
ETH_P_SCA = 0x6007
ETH_P_TEB = 0x6558
ETH_P_RARP = 0x8035
ETH_P_ATALK = 0x809B
ETH_P_AARP = 0x80F3
ETH_P_8021Q = 0x8100
ETH_P_IPX = 0x8137
ETH_P_IPV6 = 0x86DD
ETH_P_PAUSE = 0x8808
ETH_P_SLOW = 0x8809
ETH_P_WCCP = 0x883E
ETH_P_MPLS_UC = 0x8847
ETH_P_MPLS_MC = 0x8848
ETH_P_ATMMPOA = 0x884c
ETH_P_PPP_DISC = 0x8863
ETH_P_PPP_SES = 0x8864
ETH_P_LINK_CTL = 0x886c
ETH_P_ATMFATE = 0x8884
ETH_P_PAE = 0x888E
ETH_P_AOE = 0x88A2
ETH_P_8021AD = 0x88A8
ETH_P_802_EX1 = 0x88B5
ETH_P_TIPC = 0x88CA
ETH_P_8021AH = 0x88E7
ETH_P_MVRP = 0x88F5
ETH_P_1588 = 0x88F7
ETH_P_PRP = 0x88FB
ETH_P_FCOE = 0x8906
ETH_P_TDLS = 0x890D
ETH_P_FIP = 0x8914
ETH_P_80221 = 0x8917
ETH_P_LOOPBACK = 0x9000
ETH_P_QINQ1 = 0x9100
ETH_P_QINQ2 = 0x9200
ETH_P_QINQ3 = 0x9300
ETH_P_EDSA = 0xDADA
ETH_P_AF_IUCV = 0xFBFB
ETH_P_802_3_MIN = 0x0600
ETH_P_802_3 = 0x0001
ETH_P_AX25 = 0x0002
ETH_P_ALL = 0x0003
ETH_P_802_2 = 0x0004
ETH_P_SNAP = 0x0005
ETH_P_DDCMP = 0x0006
ETH_P_WAN_PPP = 0x0007
ETH_P_PPP_MP = 0x0008
ETH_P_LOCALTALK = 0x0009
ETH_P_CAN = 0x000C
ETH_P_CANFD = 0x000D
ETH_P_PPPTALK = 0x0010
ETH_P_TR_802_2 = 0x0011
ETH_P_MOBITEX = 0x0015
ETH_P_CONTROL = 0x0016
ETH_P_IRDA = 0x0017
ETH_P_ECONET = 0x0018
ETH_P_HDLC = 0x0019
ETH_P_ARCNET = 0x001A
ETH_P_DSA = 0x001B
ETH_P_TRAILER = 0x001C
ETH_P_PHONET = 0x00F5
ETH_P_IEEE802154 = 0x00F6
ETH_P_CAIF = 0x00F7
ETH_P_XDSA = 0x00F8


VLAN_HLEN = 4
VLAN_ETH_HLEN = 18
VLAN_ETH_ZLEN = 64
VLAN_ETH_DATA_LEN = 1500
VLAN_ETH_FRAME_LEN = 1518
VLAN_PRIO_MASK = 0xe000
VLAN_PRIO_SHIFT = 13
VLAN_CFI_MASK = 0x1000
VLAN_TAG_PRESENT = VLAN_CFI_MASK
VLAN_VID_MASK = 0x0fff
VLAN_N_VID = 4096



#/* General test specific settings */
MAX_SUBTESTS = 3
MAX_TESTRUNS = 10000
MAX_DATA = 128
MAX_INSNS = 512
MAX_K = 0xffffFFFF

#/* Few constants used to init test 'skb' */
SKB_TYPE = 3
SKB_MARK = 0x1234aaaa
SKB_HASH = 0x1234aaab
SKB_QUEUE_MAP = 123
SKB_VLAN_TCI = 0xffff
SKB_DEV_IFINDEX = 577
SKB_DEV_TYPE = 588

# classes
BPF_LD = 0x00
BPF_LDX = 0x01
BPF_ST = 0x02
BPF_STX	 = 0x03
BPF_ALU = 0x04
BPF_JMP = 0x05
BPF_RET = 0x06
BPF_MISC = 0x07

#sizes
BPF_W = 0x00
BPF_H = 0x08
BPF_B = 0x10

#modes
BPF_IMM = 0x00
BPF_ABS = 0x20
BPF_IND = 0x40
BPF_MEM = 0x60
BPF_LEN = 0x80
BPF_MSH = 0xa0

#op
BPF_ADD = 0x00
BPF_SUB = 0x10
BPF_MUL = 0x20
BPF_DIV = 0x30
BPF_OR = 0x40
BPF_AND = 0x50
BPF_LSH = 0x60
BPF_RSH = 0x70
BPF_NEG = 0x80
BPF_MOD = 0x90
BPF_XOR = 0xa0
BPF_JA = 0x00
BPF_JEQ = 0x10
BPF_JGT = 0x20
BPF_JGE = 0x30
BPF_JSET = 0x40
BPF_TAX = 0x00
BPF_TXA = 0x80

#src
BPF_K = 0x00
BPF_X = 0x08
BPF_A = 0x10

BPF_MAXINSNS = 4096

BPF_MEMWORDS = 16

SKF_AD_OFF = (-0x1000)
SKF_AD_PROTOCOL = 0
SKF_AD_PKTTYPE = 4
SKF_AD_IFINDEX = 8
SKF_AD_NLATTR = 12
SKF_AD_NLATTR_NEST = 16
SKF_AD_MARK = 20
SKF_AD_QUEUE = 24
SKF_AD_HATYPE = 28
SKF_AD_RXHASH = 32
SKF_AD_CPU = 36
SKF_AD_ALU_XOR_X = 40
SKF_AD_VLAN_TAG = 44
SKF_AD_VLAN_TAG_PRESENT = 48
SKF_AD_PAY_OFFSET = 52
SKF_AD_RANDOM = 56
SKF_AD_VLAN_TPID = 60
SKF_AD_MAX = 64

SKF_NET_OFF = (-0x100000)
SKF_LL_OFF = (-0x200000)

BPF_NET_OFF = SKF_NET_OFF
BPF_LL_OFF = SKF_LL_OFF

def BPF_RVAL(code):
	return ((code) & 0x18)

def BPF_MISCOP(code):
	return ((code) & 0xf8)

import struct

class BpfFilter:
	def __init__(self, code, jt, jf, k):
		self.code = code
		self.jt = jt
		self.jf = jf
		self.k = k

	def binarydata(self):
		return struct.pack("<HbbL",self.code,self.jt,self.jf,self.k & 0xffffffff)



def BPF_STMT(code, k):
	return BpfFilter(code, 0, 0, k)

def BPF_JUMP(code, k, jt, jf):
	return BpfFilter(code, jt, jf, k)

def testeval(string):
	return eval(string)